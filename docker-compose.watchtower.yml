version: '3.8'

services:
  # Main Application
  app:
    image: ghcr.io/umaraliyev0101/ai_for_education:latest
    container_name: ai-education-app
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      # Database
      - DATABASE_URL=sqlite:///./ai_education.db
      
      # Security
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here-change-in-production}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      
      # CORS (add your frontend domains)
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
      
      # API Configuration
      - API_V1_PREFIX=/api/v1
      - PROJECT_NAME=AI Education Platform
      - DEBUG=false
    
    volumes:
      # Persistent data
      - ./uploads:/app/uploads
      - ./vector_stores:/app/vector_stores
      - ./lesson_materials:/app/lesson_materials
      - ./ai_education.db:/app/ai_education.db
      
      # Optional: Mount custom config
      # - ./custom_config.py:/app/backend/config.py
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    labels:
      # Enable Watchtower for this container
      - "com.centurylinklabs.watchtower.enable=true"
      
      # Optional: Notification on update
      - "com.centurylinklabs.watchtower.notify=true"
    
    networks:
      - ai-education-network

  # Watchtower - Automatic Updates
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    
    volumes:
      # Docker socket access (required)
      - /var/run/docker.sock:/var/run/docker.sock
      
      # Docker credentials (for GHCR authentication)
      - ~/.docker/config.json:/config.json:ro
    
    environment:
      # Check for updates every 5 minutes (300 seconds)
      - WATCHTOWER_POLL_INTERVAL=300
      
      # Remove old images after update
      - WATCHTOWER_CLEANUP=true
      
      # Include containers being restarted
      - WATCHTOWER_INCLUDE_RESTARTING=true
      
      # Only update containers with the label
      - WATCHTOWER_LABEL_ENABLE=true
      
      # Rolling restart (one at a time)
      - WATCHTOWER_ROLLING_RESTART=true
      
      # Optional: Notifications (uncomment and configure)
      # Telegram: WATCHTOWER_NOTIFICATIONS=shoutrrr://telegram://token@telegram?channels=channel
      # Slack: WATCHTOWER_NOTIFICATIONS=shoutrrr://slack://token@channel
      # Email: WATCHTOWER_NOTIFICATIONS=shoutrrr://smtp://username:password@host:port/?from=fromAddress&to=toAddress
      
      # Debug mode (set to true for troubleshooting)
      - WATCHTOWER_DEBUG=false
      
      # Notification settings
      - WATCHTOWER_NOTIFICATION_REPORT=true
      - WATCHTOWER_NOTIFICATION_LEVEL=info
    
    command: 
      - --interval 300
      - --cleanup
      - --label-enable
      - --rolling-restart
    
    networks:
      - ai-education-network

  # Optional: Nginx Reverse Proxy (uncomment if needed)
  # nginx:
  #   image: nginx:alpine
  #   container_name: ai-education-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - app
  #   networks:
  #     - ai-education-network

networks:
  ai-education-network:
    driver: bridge

# Optional: Define volumes for better management
# volumes:
#   uploads:
#   vector_stores:
#   lesson_materials:
